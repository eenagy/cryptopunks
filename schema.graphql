type UserAddress @entity {
  "simply the address"
  id: ID!
}

type TenancyDates @entity {
  "getCryptopunkID(cryptopunkIDInBigInt) + '::' + event.transaction.hash.toHex() + '::' + event.logIndex.toHex()"
  id: ID!
  "timestamp as seconds since unix epoch."
  start: BigInt!
  "timestamp as seconds since unix epoch. end > start."
  end: BigInt!
}

type Cryptopunk @entity {
  "cryptopunk og id"
  id: ID!
  owner: UserAddress!
  provenance: [Provenance!] @derivedFrom(field: "cryptopunk")
}

type Provenance @entity {
  "cryptopunk id"
  id: ID!
  "same as above. graph does not allow to derive from id in Cryptopunk, thus redundancy."
  cryptopunk: Cryptopunk!
  tenant: UserAddress!
  tenancyDates: TenancyDates!
}
